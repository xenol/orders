// Component Wait CSS
// Add rotating font-awesome symbol on the center of container
// Hide content
// Dependecies: mixins/loading
// ======================================
.wait-css {
	.loading();
}

.wait-css-xs {
	@media screen and (max-width: @screen-xs-max) {
		.loading();
	}
}

.wait-css-sm {
	@media screen and (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
		.loading();
	}
}

.wait-css-md {
	@media screen and (min-width: @screen-md-min) and (max-width: @screen-md-max) {
		.loading();
	}
}

.wait-css-lg {
	@media screen and (min-width: @screen-lg-min) {
		.loading();
	}
}


.wait-css-before() {
	font-size: 20px !important;
}

.wait-css::before,
.wait-css-pulse::before {
	.wait-css-before();
}

.wait-css-xs::before,
.wait-css-pulse-xs::before {
	@media screen and (max-width: @screen-xs-max) {
		.wait-css-before();
	}
}

.wait-css-sm::before,
.wait-css-pulse-sm::before {
	@media screen and (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
		.wait-css-before();
	}
}

.wait-css-md::before,
.wait-css-pulse-md::before {
	@media screen and (min-width: @screen-md-min) and (max-width: @screen-md-max) {
		.wait-css-before();
	}
}

.wait-css-lg::before,
.wait-css-pulse-lg::before {
	@media screen and (min-width: @screen-lg-min) {
		.wait-css-before();
	}
}


// body
.wait-css-pulse {
	.loading(8);
}

.wait-css-pulse-xs {
	@media screen and (max-width: @screen-xs-max) {
		.loading(8);
	}
}

.wait-css-pulse-sm {
	@media screen and (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
		.loading(8);
	}
}

.wait-css-pulse-md {
	@media screen and (min-width: @screen-md-min) and (max-width: @screen-md-max) {
		.loading(8);
	}
}

.wait-css-pulse-lg {
	@media screen and (min-width: @screen-lg-min) {
		.loading(8);
	}
}


// body
.wait-css-body() {
	visibility: hidden;
}

.wait-css-body {
	.wait-css-body();
}

.wait-css-body-xs {
	@media screen and (max-width: @screen-xs-max) {
		.wait-css-body();
	}
}

.wait-css-body-sm {
	@media screen and (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
		.wait-css-body();
	}
}

.wait-css-body-md {
	@media screen and (min-width: @screen-md-min) and (max-width: @screen-md-max) {
		.wait-css-body();
	}
}

.wait-css-body-lg {
	@media screen and (min-width: @screen-lg-min) {
		.wait-css-body();
	}
}

.wait-css-body-before() {
	visibility: visible;
	content: "Загрузка...";
	font-size: @font-size-h4;
	opacity: 0;
	position: fixed;
	top: 10px;
	left: 15px;
	animation: opacity-blink 0.5s infinite alternate;
}

@keyframes opacity-blink {
	from {
		opacity: 0;
	}
	to {
		opacity: 0.8;
	}
}

@-webkit-keyframes opacity-blink {
	from {
		opacity: 0;
	}
	to {
		opacity: 0.8;
	}
}

.wait-css-body::before {
	.wait-css-body-before();
}

.wait-css-body-xs::before {
	@media screen and (max-width: @screen-xs-max) {
		.wait-css-body-before();
	}
}

.wait-css-body-sm::before {
	@media screen and (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
		.wait-css-body-before();
	}
}

.wait-css-body-md::before {
	@media screen and (min-width: @screen-md-min) and (max-width: @screen-md-max) {
		.wait-css-body-before();
	}
}

.wait-css-body-lg::before {
	@media screen and (min-width: @screen-lg-min) {
		.wait-css-body-before();
	}
}