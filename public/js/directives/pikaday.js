'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

define(['./module', 'pikaday', 'plugins/loadVendorCSS'], function (directives, Pikaday) {
	'use strict';

	directives.directive('pikaday', ['$filter', function ($filter) {
		return {
			restrict: 'E',
			replace: true,
			transclude: true,
			template: '<div class="form-group form-group-lg block-calculator__form-group">' + '<div class="input-group">' + '<input class="form-control block-calculator__input" data-ng-model="date" data-ng-change="changeDate(date)" type="text" aria-label="{{\'Use the arrow keys to pick a date\' | translate}}" readonly>' + '<span class="input-group-addon btn block-calculator__input-addon" data-ng-click="togglePicker()"><span class="caret"></span></span>' + '</div>' + '</div>',
			link: function link(scope, element, attrs) {
				var PikadayPicker = function () {
					function PikadayPicker() {
						var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

						_classCallCheck(this, PikadayPicker);

						this.element = element;
						this.picker = this.init();
					}

					_createClass(PikadayPicker, [{
						key: 'toggle',
						value: function toggle() {
							if (this.picker.isVisible()) this.picker.hide();else this.picker.show();
						}
					}, {
						key: 'init',
						value: function init() {
							var _this = this;

							var promise = loadVendorCSS('pikaday'),
							    date = new Date(),
							    tomorrow = new Date(date.getFullYear(), date.getMonth(), date.getDate() + 1),
							    after31days = new Date(date.getFullYear(), date.getMonth(), date.getDate() + 31);

							promise.then(function (result) {
								_this.picker = new Pikaday({
									field: _this.element,
									theme: 'pikaday-order-theme',
									firstDay: 1,
									defaultDate: tomorrow,
									setDefaultDate: tomorrow,
									toString: function toString(date, format) {
										var day = date.getDate();
										var month = [$filter('translate')('january'), $filter('translate')('february'), $filter('translate')('march'), $filter('translate')('april'), $filter('translate')('may'), $filter('translate')('june'), $filter('translate')('july'), $filter('translate')('august'), $filter('translate')('september'), $filter('translate')('october'), $filter('translate')('november'), $filter('translate')('december')][date.getMonth()];
										var weekday = [$filter('translate')('Sunday'), $filter('translate')('Monday'), $filter('translate')('Tuesday'), $filter('translate')('Wednesday'), $filter('translate')('Thursday'), $filter('translate')('Friday'), $filter('translate')('Saturday')][date.getDay()];
										return day + ' ' + month + ', ' + weekday;
									},

									i18n: {
										previousMonth: $filter('translate')('Previous Month'),
										nextMonth: $filter('translate')('Next Month'),
										months: [$filter('translate')('January'), $filter('translate')('February'), $filter('translate')('March'), $filter('translate')('April'), $filter('translate')('May'), $filter('translate')('June'), $filter('translate')('July'), $filter('translate')('August'), $filter('translate')('September'), $filter('translate')('October'), $filter('translate')('November'), $filter('translate')('December')],
										weekdays: [$filter('translate')('Sunday'), $filter('translate')('Monday'), $filter('translate')('Tuesday'), $filter('translate')('Wednesday'), $filter('translate')('Thursday'), $filter('translate')('Friday'), $filter('translate')('Saturday')],
										weekdaysShort: [$filter('translate')('Sun'), $filter('translate')('Mon'), $filter('translate')('Tue'), $filter('translate')('Wed'), $filter('translate')('Thu'), $filter('translate')('Fri'), $filter('translate')('Sat')]
									}
								});

								_this.picker.setMinDate(tomorrow);
								_this.picker.setMaxDate(after31days);
							});
						}
					}]);

					return PikadayPicker;
				}();

				var pikadayPicker = new PikadayPicker(element[0].childNodes[0].childNodes[0]);

				scope.togglePicker = function () {
					pikadayPicker.toggle();
				};
			}
		};
	}]);
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
